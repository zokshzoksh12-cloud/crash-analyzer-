<!DOCTYPE html><html lang="ar" dir="rtl">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>تحليل الطيّارة — أداة أونلاين (عربي/داكن)</title>
  <meta name="color-scheme" content="dark" />
  <style>
    :root{--bg:#0f172a;--card:#111827;--ink:#e2e8f0;--muted:#94a3b8;--line:#1f2937;--btn:#1d4ed8;--btn2:#334155;--good:#10b981;--bad:#ef4444;--warn:#f59e0b}
    *{box-sizing:border-box}
    html,body{margin:0;height:100%;background:var(--bg);color:var(--ink);font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif}
    header{position:sticky;top:0;background:#0b1220;border-bottom:1px solid var(--line);padding:12px 16px;z-index:10}
    h1{margin:0;font-size:18px}
    .wrap{max-width:1100px;margin:0 auto;padding:16px}
    .card{background:var(--card);border:1px solid var(--line);border-radius:16px;padding:16px;margin:12px 0;box-shadow:0 10px 24px rgba(0,0,0,.2)}
    .row{display:flex;align-items:center;gap:8px;flex-wrap:wrap}
    label{display:flex;align-items:center;gap:8px}
    input,textarea,button,select{background:#0b1220;color:var(--ink);border:1px solid var(--btn2);border-radius:12px;padding:10px}
    input,select,button{height:44px}
    textarea{width:100%;min-height:96px}
    button.primary{background:var(--btn);border-color:#1e40af}
    button.ghost{background:#0b1220}
    .pill{display:inline-block;padding:6px 10px;border:1px solid var(--btn2);border-radius:999px;background:#0b1220}
    .muted{color:var(--muted)}
    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:12px}
    .stat{font-size:14px;white-space:pre-wrap}
    .good{color:var(--good)}.bad{color:var(--bad)}.warn{color:var(--warn)}
    canvas{width:100%;height:340px}
    .kpi{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:10px}
    .kpi .box{background:#0b1220;border:1px solid var(--btn2);border-radius:12px;padding:12px}
    .mono{font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace}
  </style>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
</head>
<body>
  <header>
    <h1>تحليل الطيّارة — أداة أونلاين (عربي/داكن)</h1>
    <div class="muted">أدخل الجولات، واحصل على ملخص رقمي + قرار "أعلى/أقل" بالنسبة لعتبة تختارها (افتراضي 2×).</div>
  </header>  <div class="wrap">
    <!-- إدخال البيانات -->
    <div class="card">
      <div class="row">
        <label>حجم النافذة N: <input id="win" type="number" min="10" max="5000" value="30"/></label>
        <label>العتبة c: <input id="th" type="number" step="0.01" value="2"/></label>
        <label>تمليس α (لابلاس): <input id="alpha" type="number" step="0.1" value="1"/></label>
        <label>قائمة عتبات EV: <input id="cList" type="text" value="1.20,1.40,1.60,1.80,2.00,2.50,3.00"/></label>
      </div>
      <div class="row">
        <input id="one" type="number" step="0.01" placeholder="قيمة واحدة (مثال 1.25)"/>
        <button id="add" class="primary">إضافة</button>
        <button id="undo" class="ghost">تراجع آخر</button>
        <button id="clear" class="ghost">مسح الكل</button>
      </div>
      <textarea id="bulk" placeholder="ألصق قيماً مفصولة بأسطر أو فواصل (مثال:\n1.40\n1.11\n5.32)"></textarea>
      <div class="row">
        <button id="append" class="primary">ضمّ الدُفعة</button>
        <button id="export" class="ghost">حفظ JSON</button>
        <input id="import" type="file" accept="application/json" />
      </div>
      <div class="muted">البيانات محفوظة محليًا على جهازك فقط (localStorage) — لا يتم إرسال أي شيء للخوادم.</div>
    </div><!-- مؤشرات سريعة -->
<div class="card">
  <div class="kpi">
    <div class="box"><div class="muted">عدد الجولات</div><div id="kN" class="mono">0</div></div>
    <div class="box"><div class="muted">نسبة ≥ 2×</div><div id="kp2" class="mono">—</div></div>
    <div class="box"><div class="muted">توقع رقمي للجولة القادمة</div><div id="kPred" class="mono">—</div></div>
    <div class="box"><div class="muted">قرار ≥ c</div><div id="kDecision" class="mono">—</div></div>
  </div>
</div>

<!-- ملخص وتحليل -->
<div class="card">
  <div class="grid">
    <div class="stat" id="summary"></div>
    <div class="stat" id="ev"></div>
  </div>
</div>

<!-- الرسم البياني -->
<div class="card">
  <div class="row" style="justify-content:space-between">
    <div class="muted">الرسم لآخر 100 جولة. الخط الأفقي = العتبة c.</div>
    <div class="row"><label>تمليس تنبؤ λ: <input id="lambda" type="number" step="0.05" min="0" max="1" value="0.35"/></label></div>
  </div>
  <canvas id="chart"></canvas>
</div>

<div class="card muted" style="font-size:12px">
  هذه أداة تعليمية لإظهار إحصاءات تقريبية (مثل احتمال ≥ c وEV) باستخدام تمليس لابلاس و"تنعيم أسي" للتوقع. لا يوجد ضمان دقة، ولا تصلح لتقديم نصيحة مالية أو مقامرة.
</div>

  </div><script>
(function(){
  const $ = s => document.querySelector(s);
  const fmt=(x,d=2)=>Number(x).toFixed(d);
  const parseVals=t=>t.split(/[^0-9.]+/).filter(Boolean).map(Number).filter(v=>isFinite(v)&&v>0);
  const quantile=(a,q)=>{if(!a.length) return NaN; const s=[...a].sort((x,y)=>x-y), p=(s.length-1)*q, b=Math.floor(p), r=p-b; return s[b+1]!==undefined? s[b]+r*(s[b+1]-s[b]) : s[b];};
  const wilson=(k,n,z=1.96)=>{ if(n===0) return [0,1]; const p=k/n, den=1+z*z/n, ctr=(p+z*z/(2*n))/den, half=z*Math.sqrt((p*(1-p)+z*z/(4*n))/n)/den; return [Math.max(0,ctr-half), Math.min(1,ctr+half)]; };

  // state
  const model = JSON.parse(localStorage.getItem('web_tool_ar_dark')||'{"rounds":[]}');
  const save = ()=>localStorage.setItem('web_tool_ar_dark', JSON.stringify(model));

  // UI refs
  const win=$('#win'), th=$('#th'), alpha=$('#alpha'), cList=$('#cList');
  const one=$('#one'), add=$('#add'), undo=$('#undo'), clear=$('#clear');
  const bulk=$('#bulk'), append=$('#append');
  const exp=$('#export'), imp=$('#import');
  const kN=$('#kN'), kp2=$('#kp2'), kPred=$('#kPred'), kDecision=$('#kDecision');
  const summary=$('#summary'), ev=$('#ev');
  const lam=$('#lambda');

  // chart
  let chart; const ctx=document.getElementById('chart').getContext('2d');

  function histPct(xs){ if(!xs.length) return 0; return xs.filter(v=>v>=2).length/xs.length; }

  function smoothForecast(xs, lambda){
    // تنعيم أُسّي على لوغاريتم القيم (لأنها موجبة وغالبًا منحازة)
    if(xs.length===0) return NaN;
    let s = Math.log(xs[0]);
    for(let i=1;i<xs.length;i++){ s = lambda*Math.log(xs[i]) + (1-lambda)*s; }
    const pred = Math.exp(s); // تحويل راجع
    return pred;
  }

  function computeEV(xs, cs, a){
    const n=xs.length; const rows=[];
    for(const c of cs){ const k=xs.filter(v=>v>=c).length; const p=(k+a)/(n+2*a); const [lo,hi]=wilson(k,n); rows.push({c,k,n,p,lo,hi,ev:c*p-1}); }
    // اختر أفضل EV للمعلومة فقط
    let best=rows[0]; for(const r of rows){ if(r.ev>best.ev) best=r; }
    return {rows,best};
  }

  function decision(p_ge_c){ return p_ge_c>=0.5 ? {txt:'مرجّح أعلى من العتبة', cls:'good'} : {txt:'مرجّح أقل من العتبة', cls:'bad'}; }

  function redraw(){
    const N=Math.max(10, Math.min(5000, Number(win.value)||30));
    const c=Number(th.value)||2; const a=Number(alpha.value)||1;
    const xs = model.rounds.slice(-N);
    const vals = xs.map(v=>v);

    // KPIs
    kN.textContent = vals.length;
    const p2 = histPct(vals);
    kp2.textContent = vals.length? (100*p2).toFixed(1)+'%': '—';

    const pred = smoothForecast(vals, Math.min(1, Math.max(0, Number(lam.value)||0.35)));
    kPred.textContent = isFinite(pred)? fmt(pred,2): '—';

    const k = vals.filter(v=>v>=c).length;
    const n = vals.length;
    const p_ge_c = n? (k+a)/(n+2*a): 0; // Laplace
    const d = decision(p_ge_c);
    kDecision.innerHTML = `<span class="${d.cls}">${d.txt}</span> — p̂≈ ${fmt(p_ge_c,3)}`;

    // Summary
    if(n){
      const s=[...vals].sort((x,y)=>x-y);
      const mean = vals.reduce((x,y)=>x+y,0)/n;
      const varc = vals.reduce((x,y)=>x+(y-mean)**2,0)/(n-1||1);
      const std = Math.sqrt(varc);
      const q1=quantile(vals,0.25), med=quantile(vals,0.5), q3=quantile(vals,0.75);
      const [lo,hi]=wilson(k,n);
      summary.textContent = `أقل/أكبر: ${fmt(s[0])} / ${fmt(s[s.length-1])}\nمتوسط: ${fmt(mean)} — انحراف معياري: ${fmt(std)}\nالوسيط: ${fmt(med)} — ربعيات: [${fmt(q1)}, ${fmt(q3)}]\n≥ ${c}x: ${k}/${n} — p̂=${fmt(p_ge_c,3)} — Wilson95%=[${fmt(lo,3)}, ${fmt(hi,3)}]`;
    } else { summary.textContent = 'لا توجد بيانات بعد.'; }

    // EV table
    const cs = cList.value.split(',').map(s=>Number(s.trim())).filter(x=>isFinite(x) && x>1);
    if(vals.length && cs.length){
      const {rows,best} = computeEV(vals, cs, a);
      const lines = ["c\tk/n\tp̂\tWilson95%\tEV"]; rows.forEach(r=>{
        lines.push(`${r.c.toFixed(2)}\t${r.k}/${r.n}\t${r.p.toFixed(3)}\t[${r.lo.toFixed(3)}, ${r.hi.toFixed(3)}]\t${r.ev.toFixed(3)}`);
      });
      lines.push("");
      lines.push(`أفضل مبدئيًا: c=${best.c.toFixed(2)} — EV=${best.ev.toFixed(3)} ${best.ev>0? '(قد يكون مجديًا)':'(غير مجدٍ)'}`);
      ev.textContent = lines.join("\n");
    } else { ev.textContent = 'أضف بيانات لعرض EV.'; }

    // chart (آخر 100 قيمة)
    const last = vals.slice(-100);
    const labels = last.map((_,i)=>`#${vals.length-100+i+1}`);
    if(chart) chart.destroy();
    chart = new Chart(ctx, {
      type:'line',
      data:{
        labels: labels,
        datasets:[
          {label:'القيمة', data:last, fill:false, tension:0.25},
          {label:`العتبة c=${c}`, data:new Array(last.length).fill(c), borderDash:[6,6], pointRadius:0}
        ]
      },
      options:{
        responsive:true,
        plugins:{legend:{labels:{color:'#e2e8f0'}}},
        scales:{
          x:{ticks:{color:'#94a3b8'}},
          y:{ticks:{color:'#94a3b8'}}
        }
      }
    });
  }

  // events
  add.addEventListener('click',()=>{ const v=Number(one.value); if(isFinite(v)&&v>0){ model.rounds.push(v); save(); one.value=''; redraw(); }});
  undo.addEventListener('click',()=>{ model.rounds.pop(); save(); redraw(); });
  clear.addEventListener('click',()=>{ if(confirm('مسح جميع الجولات؟')){ model.rounds=[]; save(); redraw(); }});
  append.addEventListener('click',()=>{ const arr=parseVals(bulk.value); if(arr.length===0){ alert('لا قيم صالحة.'); return;} arr.forEach(v=>model.rounds.push(v)); save(); bulk.value=''; redraw(); });
  exp.addEventListener('click',()=>{ const blob=new Blob([JSON.stringify(model)],{type:'application/json'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download='crash_data.json'; a.click(); setTimeout(()=>URL.revokeObjectURL(url),500); });
  imp.addEventListener('change',(e)=>{ const f=e.target.files[0]; if(!f) return; const r=new FileReader(); r.onload=()=>{ try{ const obj=JSON.parse(r.result); if(Array.isArray(obj.rounds)){ model.rounds=obj.rounds.filter(v=>isFinite(v)&&v>0); save(); redraw(); } else alert('ملف غير صالح.'); }catch{ alert('تعذر قراءة الملف.'); }}; r.readAsText(f); });
  [win,th,alpha,cList,lam].forEach(el=>el.addEventListener('input',redraw));

  redraw();
})();
</script></body>
</html>